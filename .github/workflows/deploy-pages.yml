name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate viewer data
        run: npm run generate-viewer
      
      - name: Set base href for GitHub Pages
        run: |
          sed -i 's|<base href="/">|<base href="/ai-agent-demos/">|g' pages/index.html
          echo "âœ… Base href updated for GitHub Pages deployment"
          grep "<base href=" pages/index.html
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Verify pages directory structure
        run: |
          echo "Pages directory structure:"
          ls -la pages/
          if [ -d "pages/demos" ]; then
            echo "Demos directory found"
            ls -la pages/demos/
          fi
          if [ -f "pages/demos.json" ]; then
            echo "âœ… demos.json found and generated"
            echo ""
            echo "ðŸ“Š Demo Statistics:"
            cat > /tmp/count_demos.py << 'PYEOF'
          import json
          with open('pages/demos.json') as f:
              data = json.load(f)
          print(f'   Total demos: {len(data)}')
          total_implementations = 0
          for demo in data:
              impl_count = len(demo['models'])
              total_implementations += impl_count
              print(f'   - {demo["name"]}: {impl_count} implementation(s)')
          print(f'   Total implementations: {total_implementations}')
          PYEOF
            python3 /tmp/count_demos.py
            echo ""
            echo "ðŸ“„ First 20 lines of demos.json:"
            cat pages/demos.json | head -20
          fi
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload pages directory
          path: './pages'
          
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4